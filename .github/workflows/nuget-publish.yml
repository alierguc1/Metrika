name: Publish to NuGet

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup .NET 6.0
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '6.0.x'
        
    - name: Setup .NET 7.0
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '7.0.x'
        
    - name: Setup .NET 8.0
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Setup .NET 9.0
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
        
    - name: Extract version from tag
      id: version
      run: |
        TAG=${GITHUB_REF#refs/tags/v}
        echo "VERSION=$TAG" >> $GITHUB_OUTPUT
        echo "ðŸ“¦ Package version will be: $TAG"
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build solution
      run: dotnet build --configuration Release --no-restore
      
    - name: Run tests
      run: dotnet test --configuration Release --no-build --verbosity normal
      
    - name: Pack Metrika.Core
      run: |
        dotnet pack src/Metrika.Core/Metrika.Core.csproj \
          --configuration Release \
          --no-build \
          --output ./artifacts \
          /p:Version=${{ steps.version.outputs.VERSION }}
          
    - name: Pack Metrika.Console
      run: |
        dotnet pack src/Metrika.Console/Metrika.Console.csproj \
          --configuration Release \
          --no-build \
          --output ./artifacts \
          /p:Version=${{ steps.version.outputs.VERSION }}
          
    - name: List generated packages
      run: |
        echo "ðŸ“¦ Generated NuGet packages:"
        ls -lh ./artifacts/*.nupkg
        echo ""
        echo "ðŸ“‹ Package details:"
        for pkg in ./artifacts/*.nupkg; do
          echo "  - $(basename $pkg)"
        done
        echo ""
        echo "ðŸŽ¯ Target frameworks included:"
        echo "  - .NET 6.0"
        echo "  - .NET 7.0"
        echo "  - .NET 8.0"
        echo "  - .NET 9.0"
        
    - name: Publish to NuGet.org
      run: |
        echo "ðŸš€ Publishing packages to NuGet.org..."
        dotnet nuget push ./artifacts/*.nupkg \
          --api-key ${{ secrets.NUGET_API_KEY }} \
          --source https://api.nuget.org/v3/index.json \
          --skip-duplicate
        echo "âœ… Publishing completed!"
          
    - name: Upload artifacts to GitHub
      uses: actions/upload-artifact@v4
      with:
        name: nuget-packages-v${{ steps.version.outputs.VERSION }}
        path: ./artifacts/*.nupkg
        retention-days: 90